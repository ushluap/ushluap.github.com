{"meta":{"title":"量化研究院","subtitle":"煉金致富","description":null,"author":"BC Hsu","url":"http://ushluap.github.io","root":"/"},"pages":[],"posts":[{"title":"[Python 股票爬蟲]十分鐘學會Python爬台股(From Yahoo Finance API)","slug":"crawler-1","date":"2019-06-26T11:54:03.000Z","updated":"2019-06-26T13:04:06.000Z","comments":true,"path":"blog/2019/06/26/crawler-1/","link":"","permalink":"http://ushluap.github.io/blog/2019/06/26/crawler-1/","excerpt":"","text":"一、Python爬蟲如果你已經對Python了解了，十分鐘就可以照著本篇的說明學會如何撈出台灣股票從2000到現在的所有股價。但如果你從沒接觸過Python，建議從以下清單從頭學習。 預備知識: Python環境安裝 Python 語法 Dataframe Python 簡單爬蟲 基本爬蟲步驟:網路爬蟲基本的步驟如下: Step 1: 觀察網頁特性 Step 2: 用Get/Post將網頁資訊撈下來 Step 3: Data Clean/Data Mining Step 4: 將Data存進Database裡 概念就是把網路上的data轉化成工程師可以處理的data，接下來我會照著步驟解釋詳細的流程。(但基本上，就算不懂這些，直接拉到最下面，把code copy過去就可以動了。) 學習難度: ★二、Python 爬台灣個股詳細步驟Step 1: 觀察網頁特性我們今天要爬的是一個Yahoo Finance API:https://query1.finance.yahoo.com/v7/finance/download/2330.TW?period1=0&amp;period2=1549258857&amp;interval=1d&amp;events=history&amp;crumb=hP2rOschxO0 根據觀察，我們可以看到兩個重點:(1) 2330.TW 代表著台積電的股票代碼。(2) period1 &amp; period2 代表起始日和結束日的timestamp Step 2: 用Get/Post將網頁資訊撈下來觀察完，接下來要把網址撈下來，我們會用 Python 的套件來做 (1) 把requests import 進來 1import requests (2) 用Post來抓Data 12site = \"https://query1.finance.yahoo.com/v7/finance/download/2330.TW?period1=0&amp;period2=1549258857&amp;interval=1d&amp;events=history&amp;crumb=hP2rOschxO0\"response = requests.post(site) (3) 將抓出來的文字(CSV)直接寫進Dataframe裡，這裡會用到StringIO &amp; Pandas 套件 1234from io import StringIOimport pandas as pddf = pd.read_csv(StringIO(response.text))df Step 3: Data Clean/Data Mining這個data很乾淨，不用什麼處理 Step 4: 將Data存進Database裡因為資料量很小的關係，我決定將它寫入 pickle 就好 123import picklewith open('stock.pkl','wb') as f: pickle.dump(df,f) 三、Python 爬台灣個股詳細步驟了解上面步驟後，接下來就可以學習怎麼把全台灣的股票抓下來。 Step 1: Import 所有的套件12345import timefrom io import StringIOimport requestsimport pandas as pdimport pickle Step 2: 用time套件處理timestamp1234567def create_today_timestamp(): today = time.strftime(\"%Y-%m-%d\",time.gmtime()) return int(time.mktime(time.strptime(today, \"%Y-%m-%d\")))def create_timestamp_from_today(n): today = create_today_timestamp() return today + n*24*3600tomorrow_timestamp = create_timestamp_from_today(1) Step3: 抓全台灣的股票清單1234567891011121314def create_tw_stock_info_list(): res = requests.get(\"http://isin.twse.com.tw/isin/C_public.jsp?strMode=2\") df = pd.read_html(res.text)[0] df.columns = df.iloc[0] df = df.iloc[1:] df = df.dropna(thresh=3, axis=0).dropna(thresh=3, axis=1) df = df.dropna(how='any') df = df.reset_index(drop=True) new_df = df['有價證券代號及名稱'].str.replace(u'\\u3000',' ').str.split(u' ',expand=True) new_df.columns = ['Ticker', 'StockName'] new_df['Sector'] = df['產業別'] return new_dftw_stock_info_df = create_tw_stock_info_list()tw_stock_info_df Step4: For迴圈把所有股票抓下來12345678910111213141516stock_df = pd.DataFrame()#ticker_list = tw_stock_info_df['Ticker']ticker_list = tw_stock_info_df['Ticker'].tail(30)for ticker in ticker_list: print('## Info: Download Ticker '+ticker+'!') site = \"https://query1.finance.yahoo.com/v7/finance/download/\"+ticker+\".TW?period1=0&amp;period2=\"+str(tomorrow_timestamp)+\"&amp;interval=1d&amp;events=history&amp;crumb=hP2rOschxO0\" try: response = requests.post(site) tmp_df = pd.read_csv(StringIO(response.text)) tmp_df['Ticker'] = ticker stock_df = pd.concat([stock_df,tmp_df],axis=0) except: print('## Warning: Ticker '+ticker+' is failed!')stock_df = stock_df.reset_index(drop=True)stock_df = stock_df[['Date','Ticker','Open','High','Low','Close','Adj Close','Volume']] 總結雖然很多人都寫過相關的主題，但是還是自己實作一次，當作學習紀錄。希望對大家有所幫助。 Reference Python新手教學(1)用爬蟲爬全球股價! Python：如何獲得上市上櫃股票清單 python爬蟲 — 個股每日統計資訊","categories":[{"name":"quant","slug":"quant","permalink":"http://ushluap.github.io/categories/quant/"}],"tags":[{"name":"爬蟲","slug":"爬蟲","permalink":"http://ushluap.github.io/tags/爬蟲/"},{"name":"Python","slug":"Python","permalink":"http://ushluap.github.io/tags/Python/"},{"name":"股票","slug":"股票","permalink":"http://ushluap.github.io/tags/股票/"}]},{"title":"[Python 股票爬蟲] 用爬蟲爬全台灣個股股價(From Yahoo Finance)","slug":"crawler","date":"2019-06-25T17:04:38.000Z","updated":"2019-06-25T17:26:45.000Z","comments":true,"path":"blog/2019/06/26/crawler/","link":"","permalink":"http://ushluap.github.io/blog/2019/06/26/crawler/","excerpt":"","text":"爬蟲目標這個主題已經蠻多人寫過，其他人也寫得很詳細，就不多做說明，直接上code。 程式碼最後會得到兩個Table：(1) Ticker &amp; 行業列別的 Mapping Table(2) Date/Ticker/Price的Table 之後有時間會再學怎麼爬財報，預計的output會是(3) Date/ Ticker/ Fundamental Statement的Table 有這三個Table後，就可以自己做一些台股選股模型。 程式碼 Reference Python新手教學(1)用爬蟲爬全球股價! Python：如何獲得上市上櫃股票清單 python爬蟲 — 個股每日統計資訊","categories":[{"name":"quant","slug":"quant","permalink":"http://ushluap.github.io/categories/quant/"}],"tags":[]}]}